% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dtts.utils.R
\docType{methods}
\name{grid.align,data.table-method}
\alias{grid.align,data.table-method}
\title{Align a \code{data.table} onto a \code{nanotime} vector grid}
\usage{
\S4method{grid.align}{data.table}(x, by, func, ival = by, start = x[[1]][1],
  end = tail(x[[1]], 1))
}
\arguments{
\item{x}{the \code{data.table} time-series to align from}

\item{by}{interval specified in nanoseconds}

\item{func}{a function taking one argument and which provides an
arbitrary aggregation of its argument; if \code{NULL} then a
function which takes the closest observation is used.}

\item{start}{scalar \code{nanotime} defining the start of the
grid; by default the first element of \code{x} is taken.}

\item{end}{scalar \code{nanotime} defining the end of the grid; by
default the last element of \code{x} is taken.}
}
\value{
a \code{data.table} time-series of the same length as
    \code{y} with the aggregations computed by \code{func}
}
\description{
\code{grid.align} returns the subset of \code{data.table} \code{x}
that aligns on the grid defined by \code{by}, \code{start} and
\code{end}
}
\details{
A grid defined by the parameter \code{by}, \code{start} and
\code{end} is created. The function then does a standard alignment
of \code{x} onto this grid (see the \code{align} function)
}
\examples{
\dontrun{
one_second <- 1e9
one_minute <- 60 * one_second
x <- data.table(index=nanotime(cumsum(sin(seq(0.001, pi, 0.001)) * one_second)), 1)
grid.align(x, as.integer64(one_minute), sum)
}
}
